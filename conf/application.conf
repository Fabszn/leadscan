play.crypto.secret = "V5PLu=uXsP3>b`1yTZpgsKuXm2tIxC5GT7F?_z:0<EIzBK;SoryT/dlE][4QpT_G"


db_leadTrackerDb {
  driver = "org.postgresql.Driver"
  migration.outOfOrder = true
  migration.auto = true
  pool = "bonecp"
  bonecp.logStatements = false
  bonecp.minConnectionsPerPartition = 1
  bonecp.maxConnectionsPerPartition = 2
}

db_server_url = "jdbc:postgresql://"${?POSTGRESQL_ADDON_HOST}":"${?POSTGRESQL_ADDON_PORT}

db {

  leadTrackerDb = ${db_leadTrackerDb} {
    url = ${db_server_url}"/"${?POSTGRESQL_ADDON_DB}
    username = ${?POSTGRESQL_ADDON_USER}
    password = ${?POSTGRESQL_ADDON_PASSWORD}
    logSql=true
  }
}

tls{
  enable.https = ${?ENABLE_HTTPS}
}


play.application.loader = LeadTrackerApplicationLoader
play.modules.enabled += org.flywaydb.play.PlayModule

play.filters.cors.allowedOrigins = null

export {
  headers.sponsor = "Rep_first_Name|Rep_last_Name|RegId|first_Name|last_Name|Email_Address|Company|Title|Notes"
  headers.representative = "RegId,first_Name,last_Name,Email_Address,Company,Country,Title,allNotes"
  headers.events = "Rep_first_Name|Rep_last_Name|RegId|first_Name |last_Name|Email_Address|Company|Title"
}


oAuth {
  url.base = ${?MY_DEVOXX_URI}
  endpoints {
    auth = "/pwa/signin"
    userinfo = "/pwa/user"
    createPerson = "/profiles/create"
    password = "/profiles/updatePassword/"
  }
  jwt {
    sharedsecret = ${?MY_DEVOXX_SECRET}
    localsecret = "23kH56Cql2SE06mBw3XgPVdV58mJ1MC9zZFYcv5DVVn9ry8DZwR"
  }
}


session {
  timeout.mn = 10
}

play.mailer {
  host = ${? SMTP_HOST}
  port = ${? SMTP_PORT}
  ssl = ${? SMTP_SSL}
  user = ${? SMTP_USER}
  password = ${? SMTP_PASSWORD}
  mock = ${? SMTP_MOCK}
  from = ${?MAIL_FROM}
  bcc = ${?MAIL_BCC}
  committee=${?MAIL_COMMITTEE}
}

include "local.conf"
